name: Testing
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]

jobs:
  linting:
    name: 📖 Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: 🛠️ Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: ✴️ Run ruff check
        run: poetry run ruff check .
      - name: ✴️ Run pylint check
        run: poetry run pylint app/* tests/*
      - name: ✴️ Run mypy check
        run: poetry run mypy app tests
  pytest:
    name: 🧪 Pytest
    runs-on: ubuntu-latest
    services:
      app-db:
        image: postgres:13.8-bullseye
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: schedule_bot
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: 🛠️ Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: 🚀 Run pytest check
        run: poetry run pytest -vv --cov="app" .
      - name: 📁 Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
