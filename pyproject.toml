[tool.poetry]
name = "tg-schedule-bot"
version = "0.1.5"
description = ""
authors = ["Mikhail Vlasenko <ya@smkthat.ru>"]
readme = "README.md"
homepage = "https://github.com/smkthat/tg-schedule-bot"
repository = "https://github.com/smkthat/tg-schedule-bot.git"
keywords = ["telegram", "aiogram", "bot"]
include = ["README.md"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
aiogram = "^3.10.0"
pydantic-settings = "^2.3.4"
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.1"
mypy = "^1.11.0"
pylint = "^3.2.6"


[tool.poetry.group.db.dependencies]
tortoise-orm = "^0.21.5"
aerich = "^0.7.2"
asyncpg = "^0.29.0"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.1"
pytest-asyncio = "^0.23.8"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[tool.aerich]
tortoise_orm = "src.db.config.TORTOISE_CONFIG"
location = "./src/db/migrations"
src_folder = "./."

[tool.ruff]
line-length = 88
target-version = "py312"
src = ["src"]

[tool.ruff.format]
indent-style = "space"
quote-style = "double"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
select = ["D", "E", "F", "W", "C", "N", "B", "I"]
ignore = [
    "E501", # Line too long
    "E203", # Whitespace before ':'
    "D100", # Missing docstring in public module
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__
    "D106", # Missing docstring in public nested class
    "D401", # The First line should be in imperative mood
    "B008"  # Do not perform function calls in argument defaults
]
exclude = [
    "./.cache",
    "./.git",
    "./.idea",
    "./.mypy_cache",
    "./.pytest_cache",
    "./.venv",
    "./venv",
    "./env",
    "./cached_venv",
    "./docs",
    "./deploy",
    "./var",
    "./.vscode",
    "*migrations*"
]
pydocstyle.convention = "google"
isort.case-sensitive = true
isort.section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
isort.known-local-folder = ["src"]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true

[tool.pylint]
disable = [
    "wrong-import-order",
    "too-few-public-methods",
    "consider-using-f-string",
]
ignore-path = "^src/db/migrations/.*$"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
